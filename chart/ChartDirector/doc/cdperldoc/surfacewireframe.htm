<HTML>
<HEAD>
<Title>Surface Wireframe</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Surface Wireframe</p>
<hr class="separator">
<div class="content">
<img src="images/surfacewireframe0.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe1.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe2.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe3.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe4.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe5.jpg">
<br><br>
This example demonstrates the rectangular and triangular wireframes of a surface at different interpolation levels, configured using <a href="SurfaceChart.setShadingMode.htm">SurfaceChart.setShadingMode</a> and <a href="SurfaceChart.setInterpolation.htm">SurfaceChart.setInterpolation</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\surfacewireframe.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

sub createChart
{
    my $img = shift;

    # The x and y coordinates of the grid
    my $dataX = [-2, -1, 0, 1, 2];
    my $dataY = [-2, -1, 0, 1, 2];

    # The values at the grid points. In this example, we will compute the values
    # using the formula z = square_root(15 - x * x - y * y).
    my $dataZ = [(0) x (scalar(@$dataX) * scalar(@$dataY))];
    for(my $yIndex = 0; $yIndex &lt; scalar(@$dataY); ++$yIndex) {
        my $y = $dataY-&gt;[$yIndex];
        for(my $xIndex = 0; $xIndex &lt; scalar(@$dataX); ++$xIndex) {
            my $x = $dataX-&gt;[$xIndex];
            $dataZ-&gt;[$yIndex * scalar(@$dataX) + $xIndex] = sqrt(15 - $x * $x - $y *
                $y);
        }
    }

    # Create a SurfaceChart object of size 380 x 340 pixels, with white (ffffff)
    # background and grey (888888) border.
    my $c = new SurfaceChart(380, 340, 0xffffff, 0x888888);

    # Demonstrate various wireframes with and without interpolation
    if ($img eq "0") {
        # Original data without interpolation
        $c-&gt;addTitle("5 x 5 Data Points\nStandard Shading", "arialbd.ttf", 12);
        $c-&gt;setContourColor(0x80ffffff);
    } elsif ($img eq "1") {
        # Original data, spline interpolated to 40 x 40 for smoothness
        $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nStandard Shading",
            "arialbd.ttf", 12);
        $c-&gt;setContourColor(0x80ffffff);
        $c-&gt;setInterpolation(40, 40);
    } elsif ($img eq "2") {
        # Rectangular wireframe of original data
        $c-&gt;addTitle("5 x 5 Data Points\nRectangular Wireframe");
        $c-&gt;setShadingMode($perlchartdir::RectangularFrame);
    } elsif ($img eq "3") {
        # Rectangular wireframe of original data spline interpolated to 40 x 40
        $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nRectangular Wireframe"
            );
        $c-&gt;setShadingMode($perlchartdir::RectangularFrame);
        $c-&gt;setInterpolation(40, 40);
    } elsif ($img eq "4") {
        # Triangular wireframe of original data
        $c-&gt;addTitle("5 x 5 Data Points\nTriangular Wireframe");
        $c-&gt;setShadingMode($perlchartdir::TriangularFrame);
    } else {
        # Triangular wireframe of original data spline interpolated to 40 x 40
        $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nTriangular Wireframe")
            ;
        $c-&gt;setShadingMode($perlchartdir::TriangularFrame);
        $c-&gt;setInterpolation(40, 40);
    }

    # Set the center of the plot region at (200, 170), and set width x depth x height
    # to 200 x 200 x 150 pixels
    $c-&gt;setPlotRegion(200, 170, 200, 200, 150);

    # Set the plot region wall thichness to 5 pixels
    $c-&gt;setWallThickness(5);

    # Set the elevation and rotation angles to 20 and 30 degrees
    $c-&gt;setViewAngle(20, 30);

    # Set the data to use to plot the chart
    $c-&gt;setData($dataX, $dataY, $dataZ);

    # Output the chart
    $c-&gt;makeChart("surfacewireframe$img.jpg")
}

createChart(0);
createChart(1);
createChart(2);
createChart(3);
createChart(4);
createChart(5);</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\surfacewireframe.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# Get HTTP query parameters
use CGI;
my $query = new CGI;

# The x and y coordinates of the grid
my $dataX = [-2, -1, 0, 1, 2];
my $dataY = [-2, -1, 0, 1, 2];

# The values at the grid points. In this example, we will compute the values using
# the formula z = square_root(15 - x * x - y * y).
my $dataZ = [(0) x (scalar(@$dataX) * scalar(@$dataY))];
for(my $yIndex = 0; $yIndex &lt; scalar(@$dataY); ++$yIndex) {
    my $y = $dataY-&gt;[$yIndex];
    for(my $xIndex = 0; $xIndex &lt; scalar(@$dataX); ++$xIndex) {
        my $x = $dataX-&gt;[$xIndex];
        $dataZ-&gt;[$yIndex * scalar(@$dataX) + $xIndex] = sqrt(15 - $x * $x - $y * $y);
    }
}

# Create a SurfaceChart object of size 380 x 340 pixels, with white (ffffff)
# background and grey (888888) border.
my $c = new SurfaceChart(380, 340, 0xffffff, 0x888888);

# Demonstrate various wireframes with and without interpolation
if ($query-&gt;param("img") eq "0") {
    # Original data without interpolation
    $c-&gt;addTitle("5 x 5 Data Points\nStandard Shading", "arialbd.ttf", 12);
    $c-&gt;setContourColor(0x80ffffff);
} elsif ($query-&gt;param("img") eq "1") {
    # Original data, spline interpolated to 40 x 40 for smoothness
    $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nStandard Shading",
        "arialbd.ttf", 12);
    $c-&gt;setContourColor(0x80ffffff);
    $c-&gt;setInterpolation(40, 40);
} elsif ($query-&gt;param("img") eq "2") {
    # Rectangular wireframe of original data
    $c-&gt;addTitle("5 x 5 Data Points\nRectangular Wireframe");
    $c-&gt;setShadingMode($perlchartdir::RectangularFrame);
} elsif ($query-&gt;param("img") eq "3") {
    # Rectangular wireframe of original data spline interpolated to 40 x 40
    $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nRectangular Wireframe");
    $c-&gt;setShadingMode($perlchartdir::RectangularFrame);
    $c-&gt;setInterpolation(40, 40);
} elsif ($query-&gt;param("img") eq "4") {
    # Triangular wireframe of original data
    $c-&gt;addTitle("5 x 5 Data Points\nTriangular Wireframe");
    $c-&gt;setShadingMode($perlchartdir::TriangularFrame);
} else {
    # Triangular wireframe of original data spline interpolated to 40 x 40
    $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nTriangular Wireframe");
    $c-&gt;setShadingMode($perlchartdir::TriangularFrame);
    $c-&gt;setInterpolation(40, 40);
}

# Set the center of the plot region at (200, 170), and set width x depth x height to
# 200 x 200 x 150 pixels
$c-&gt;setPlotRegion(200, 170, 200, 200, 150);

# Set the plot region wall thichness to 5 pixels
$c-&gt;setWallThickness(5);

# Set the elevation and rotation angles to 20 and 30 degrees
$c-&gt;setViewAngle(20, 30);

# Set the data to use to plot the chart
$c-&gt;setData($dataX, $dataY, $dataZ);

# Output the chart
binmode(STDOUT);
print "Content-type: image/jpeg\n\n";
print $c-&gt;makeChart2($perlchartdir::JPG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
