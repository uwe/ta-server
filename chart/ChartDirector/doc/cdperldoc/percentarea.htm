<HTML>
<HEAD>
<Title>Percentage Area Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Percentage Area Chart</p>
<hr class="separator">
<div class="content">
<img src="images/percentarea.png">
<br><br>
This example demonstrates creating a percentage area chart. It also demonstrates how to include icons in the legend box using <a href="cdml.htm">CDML</a>.<br><br>
A percentage area chart is like a stacked area chart, except the areas are individually scaled so that they stacked up to 100.<br><br>
Note that in this example, the legend box contains icons. This is achieved by including the icons in the data set name using <a href="cdml.htm">CDML</a>.<br><br>
The key features demonstrated in this example are:<br><br>
<ul><li> Add a legend to the chart using <a href="BaseChart.addLegend.htm">BaseChart.addLegend</a>, and set the key size (the color box to the right of each legend entry) to 16 x 32 pixels using <a href="LegendBox.setKeySize.htm">LegendBox.setKeySize</a>. This is to better match the size of the icons.<br><br>
<li> Reverse the legend box entries using <a href="Layer.setLegend.htm">Layer.setLegend</a>, so that the last data set name is on top in the legend box. This is useful for a vertical legend box in a vertical stacked chart with purely positive data. In such case, the last data set will be stacked to the top. Reversing the legend box will make the legend keys visually consistent with the stacking order of the chart.<br><br>
<li> Add a percentage area layer using <a href="XYChart.addAreaLayer2.htm">XYChart.addAreaLayer2</a> with the <a href="perlchartdir.Percentage.htm">Percentage</a> predefined constant.<br><br>
<li> Add multiple data sets to the area layer using <a href="Layer.addDataSet.htm">Layer.addDataSet</a>, with data set names expressed using <a href="cdml.htm">CDML</a> to include icons.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\percentarea.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

# The data for the area chart
my $data0 = [42, 49, 33, 38, 51, 46, 29, 41, 44, 57, 59, 52, 37, 34, 51, 56, 56, 60,
    70, 76, 63, 67, 75, 64, 51];
my $data1 = [50, 55, 47, 34, 42, 49, 63, 62, 73, 59, 56, 50, 64, 60, 67, 67, 58, 59,
    73, 77, 84, 82, 80, 84, 98];
my $data2 = [87, 89, 85, 66, 53, 39, 24, 21, 37, 56, 37, 23, 21, 33, 13, 17, 14, 23,
    16, 25, 29, 30, 45, 47, 46];

# The timestamps on the x-axis
my $labels = [perlchartdir::chartTime(1996, 1, 1), perlchartdir::chartTime(1996, 4, 1
    ), perlchartdir::chartTime(1996, 7, 1), perlchartdir::chartTime(1996, 10, 1),
    perlchartdir::chartTime(1997, 1, 1), perlchartdir::chartTime(1997, 4, 1),
    perlchartdir::chartTime(1997, 7, 1), perlchartdir::chartTime(1997, 10, 1),
    perlchartdir::chartTime(1998, 1, 1), perlchartdir::chartTime(1998, 4, 1),
    perlchartdir::chartTime(1998, 7, 1), perlchartdir::chartTime(1998, 10, 1),
    perlchartdir::chartTime(1999, 1, 1), perlchartdir::chartTime(1999, 4, 1),
    perlchartdir::chartTime(1999, 7, 1), perlchartdir::chartTime(1999, 10, 1),
    perlchartdir::chartTime(2000, 1, 1), perlchartdir::chartTime(2000, 4, 1),
    perlchartdir::chartTime(2000, 7, 1), perlchartdir::chartTime(2000, 10, 1),
    perlchartdir::chartTime(2001, 1, 1), perlchartdir::chartTime(2001, 4, 1),
    perlchartdir::chartTime(2001, 7, 1), perlchartdir::chartTime(2001, 10, 1),
    perlchartdir::chartTime(2002, 1, 1)];

# Create a XYChart object of size 500 x 280 pixels, using 0xffffcc as background
# color, with a black border, and 1 pixel 3D border effect
my $c = new XYChart(500, 280, 0xffffcc, 0, 1);

# Set the plotarea at (50, 45) and of size 320 x 200 pixels with white background.
# Enable horizontal and vertical grid lines using the grey (0xc0c0c0) color.
$c-&gt;setPlotArea(50, 45, 320, 200, 0xffffff)-&gt;setGridColor(0xc0c0c0, 0xc0c0c0);

# Add a legend box at (370, 45) using vertical layout and 8 points Arial Bold font.
my $legendBox = $c-&gt;addLegend(370, 45, 1, "arialbd.ttf", 8);

# Set the legend box background and border to transparent
$legendBox-&gt;setBackground($perlchartdir::Transparent, $perlchartdir::Transparent);

# Set the legend box icon size to 16 x 32 pixels to match with custom icon size
$legendBox-&gt;setKeySize(16, 32);

# Add a title to the chart using 14 points Times Bold Itatic font and white font
# color, and 0x804020 as the background color
$c-&gt;addTitle("Quarterly Product Sales", "timesbi.ttf", 14, 0xffffff)-&gt;setBackground(
    0x804020);

# Set the labels on the x axis.
$c-&gt;xAxis()-&gt;setLabels2($labels);

# Set multi-style axis label formatting. Start of year labels are displayed as yyyy.
# For other labels, just show minor tick.
$c-&gt;xAxis()-&gt;setMultiFormat(perlchartdir::StartOfYearFilter(), "{value|yyyy}",
    perlchartdir::AllPassFilter(), "-");

# Add a percentage area layer to the chart
my $layer = $c-&gt;addAreaLayer2($perlchartdir::Percentage);

# Add the three data sets to the area layer, using icons images with labels as data
# set names
$layer-&gt;addDataSet($data0, 0x40ddaa77,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=service.png*&gt; Service&lt;*/*&gt;");
$layer-&gt;addDataSet($data1, 0x40aadd77,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=software.png*&gt; Software&lt;*/*&gt;");
$layer-&gt;addDataSet($data2, 0x40aa77dd,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=computer.png*&gt; Hardware&lt;*/*&gt;");

# For a vertical stacked chart with positive data only, the last data set is always
# on top. However, in a vertical legend box, the last data set is at the bottom. This
# can be reversed by using the setLegend method.
$layer-&gt;setLegend($perlchartdir::ReverseLegend);

# Output the chart
$c-&gt;makeChart("percentarea.png")</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\percentarea.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# The data for the area chart
my $data0 = [42, 49, 33, 38, 51, 46, 29, 41, 44, 57, 59, 52, 37, 34, 51, 56, 56, 60,
    70, 76, 63, 67, 75, 64, 51];
my $data1 = [50, 55, 47, 34, 42, 49, 63, 62, 73, 59, 56, 50, 64, 60, 67, 67, 58, 59,
    73, 77, 84, 82, 80, 84, 98];
my $data2 = [87, 89, 85, 66, 53, 39, 24, 21, 37, 56, 37, 23, 21, 33, 13, 17, 14, 23,
    16, 25, 29, 30, 45, 47, 46];

# The timestamps on the x-axis
my $labels = [perlchartdir::chartTime(1996, 1, 1), perlchartdir::chartTime(1996, 4, 1
    ), perlchartdir::chartTime(1996, 7, 1), perlchartdir::chartTime(1996, 10, 1),
    perlchartdir::chartTime(1997, 1, 1), perlchartdir::chartTime(1997, 4, 1),
    perlchartdir::chartTime(1997, 7, 1), perlchartdir::chartTime(1997, 10, 1),
    perlchartdir::chartTime(1998, 1, 1), perlchartdir::chartTime(1998, 4, 1),
    perlchartdir::chartTime(1998, 7, 1), perlchartdir::chartTime(1998, 10, 1),
    perlchartdir::chartTime(1999, 1, 1), perlchartdir::chartTime(1999, 4, 1),
    perlchartdir::chartTime(1999, 7, 1), perlchartdir::chartTime(1999, 10, 1),
    perlchartdir::chartTime(2000, 1, 1), perlchartdir::chartTime(2000, 4, 1),
    perlchartdir::chartTime(2000, 7, 1), perlchartdir::chartTime(2000, 10, 1),
    perlchartdir::chartTime(2001, 1, 1), perlchartdir::chartTime(2001, 4, 1),
    perlchartdir::chartTime(2001, 7, 1), perlchartdir::chartTime(2001, 10, 1),
    perlchartdir::chartTime(2002, 1, 1)];

# Create a XYChart object of size 500 x 280 pixels, using 0xffffcc as background
# color, with a black border, and 1 pixel 3D border effect
my $c = new XYChart(500, 280, 0xffffcc, 0, 1);

#Set directory for loading images to current script directory
#Need when running under Microsoft IIS
$c-&gt;setSearchPath(dirname($0));

# Set the plotarea at (50, 45) and of size 320 x 200 pixels with white background.
# Enable horizontal and vertical grid lines using the grey (0xc0c0c0) color.
$c-&gt;setPlotArea(50, 45, 320, 200, 0xffffff)-&gt;setGridColor(0xc0c0c0, 0xc0c0c0);

# Add a legend box at (370, 45) using vertical layout and 8 points Arial Bold font.
my $legendBox = $c-&gt;addLegend(370, 45, 1, "arialbd.ttf", 8);

# Set the legend box background and border to transparent
$legendBox-&gt;setBackground($perlchartdir::Transparent, $perlchartdir::Transparent);

# Set the legend box icon size to 16 x 32 pixels to match with custom icon size
$legendBox-&gt;setKeySize(16, 32);

# Add a title to the chart using 14 points Times Bold Itatic font and white font
# color, and 0x804020 as the background color
$c-&gt;addTitle("Quarterly Product Sales", "timesbi.ttf", 14, 0xffffff)-&gt;setBackground(
    0x804020);

# Set the labels on the x axis.
$c-&gt;xAxis()-&gt;setLabels2($labels);

# Set multi-style axis label formatting. Start of year labels are displayed as yyyy.
# For other labels, just show minor tick.
$c-&gt;xAxis()-&gt;setMultiFormat(perlchartdir::StartOfYearFilter(), "{value|yyyy}",
    perlchartdir::AllPassFilter(), "-");

# Add a percentage area layer to the chart
my $layer = $c-&gt;addAreaLayer2($perlchartdir::Percentage);

# Add the three data sets to the area layer, using icons images with labels as data
# set names
$layer-&gt;addDataSet($data0, 0x40ddaa77,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=service.png*&gt; Service&lt;*/*&gt;");
$layer-&gt;addDataSet($data1, 0x40aadd77,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=software.png*&gt; Software&lt;*/*&gt;");
$layer-&gt;addDataSet($data2, 0x40aa77dd,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=computer.png*&gt; Hardware&lt;*/*&gt;");

# For a vertical stacked chart with positive data only, the last data set is always
# on top. However, in a vertical legend box, the last data set is at the bottom. This
# can be reversed by using the setLegend method.
$layer-&gt;setLegend($perlchartdir::ReverseLegend);

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $c-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
