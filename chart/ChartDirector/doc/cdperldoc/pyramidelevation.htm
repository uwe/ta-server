<HTML>
<HEAD>
<Title>Pyramid Elevation</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Pyramid Elevation</p>
<hr class="separator">
<div class="content">
<img src="images/pyramidelevation0.png">&nbsp;&nbsp;<img src="images/pyramidelevation1.png">&nbsp;&nbsp;<img src="images/pyramidelevation2.png">&nbsp;&nbsp;<img src="images/pyramidelevation3.png">&nbsp;&nbsp;<img src="images/pyramidelevation4.png">&nbsp;&nbsp;<img src="images/pyramidelevation5.png">&nbsp;&nbsp;<img src="images/pyramidelevation6.png">
<br><br>
This example demonstrates viewing the pyramid at different elevation angles, configured with <a href="PyramidChart.setViewAngle.htm">PyramidChart.setViewAngle</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\pyramidelevation.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

sub createChart
{
    my $img = shift;

    # The data for the pyramid chart
    my $data = [156, 123, 211, 179];

    # The colors for the pyramid layers
    my $colors = [0x66aaee, 0xeebb22, 0xcccccc, 0xcc88ff];

    # The elevation angle
    my $angle = int($img) * 15;

    # Create a PyramidChart object of size 200 x 200 pixels, with white (ffffff)
    # background and grey (888888) border
    my $c = new PyramidChart(200, 200, 0xffffff, 0x888888);

    # Set the pyramid center at (100, 100), and width x height to 60 x 120 pixels
    $c-&gt;setPyramidSize(100, 100, 60, 120);

    # Set the elevation angle
    $c-&gt;addTitle("Elevation = $angle", "ariali.ttf", 15);
    $c-&gt;setViewAngle($angle);

    # Set the pyramid data
    $c-&gt;setData($data);

    # Set the layer colors to the given colors
    $c-&gt;setColors2($perlchartdir::DataColor, $colors);

    # Leave 1% gaps between layers
    $c-&gt;setLayerGap(0.01);

    # Output the chart
    $c-&gt;makeChart("pyramidelevation$img.png")
}

createChart(0);
createChart(1);
createChart(2);
createChart(3);
createChart(4);
createChart(5);
createChart(6);</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\pyramidelevation.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# Get HTTP query parameters
use CGI;
my $query = new CGI;

# The data for the pyramid chart
my $data = [156, 123, 211, 179];

# The colors for the pyramid layers
my $colors = [0x66aaee, 0xeebb22, 0xcccccc, 0xcc88ff];

# The elevation angle
my $angle = int($query-&gt;param("img")) * 15;

# Create a PyramidChart object of size 200 x 200 pixels, with white (ffffff)
# background and grey (888888) border
my $c = new PyramidChart(200, 200, 0xffffff, 0x888888);

# Set the pyramid center at (100, 100), and width x height to 60 x 120 pixels
$c-&gt;setPyramidSize(100, 100, 60, 120);

# Set the elevation angle
$c-&gt;addTitle("Elevation = $angle", "ariali.ttf", 15);
$c-&gt;setViewAngle($angle);

# Set the pyramid data
$c-&gt;setData($data);

# Set the layer colors to the given colors
$c-&gt;setColors2($perlchartdir::DataColor, $colors);

# Leave 1% gaps between layers
$c-&gt;setLayerGap(0.01);

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $c-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
