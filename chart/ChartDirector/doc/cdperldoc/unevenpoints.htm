<HTML>
<HEAD>
<Title>Uneven Data Points</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Uneven Data Points</p>
<hr class="separator">
<div class="content">
<img src="images/unevenpoints.png">
<br><br>
This example demonstrates data series that are unevenly spaced in the x dimension.<br><br>
In ChartDirector, it is only necessarily to provide the y coordinates (the data values) to plot a line. The x coordinates are optional. If no x coordinates are provided, the data points are assumed to be evenly spaced on the x dimension. In such case, the x-axis can be used to label the data points, with the labels configured using <a href="Axis.setLabels.htm">Axis.setLabels</a> or <a href="Axis.setLabels2.htm">Axis.setLabels2</a>. The labels are only for human reading and will not affect the positioning of the data points.<br><br>
On the other hand, if the data points are unevenly spaced, or if there are multiple data series with different spacing in the x dimension, it is necessary to provide the x coordinates of the data series. They can be provided using <a href="Layer.setXData.htm">Layer.setXData</a> or <a href="Layer.setXData2.htm">Layer.setXData2</a>. In such case, the x-axis can be automatically scaled, with labels generated by ChartDirector. Alternatively, <a href="Axis.setLinearScale.htm">Axis.setLinearScale</a>, <a href="Axis.setLogScale.htm">Axis.setLogScale</a>, <a href="Axis.setDateScale.htm">Axis.setDateScale</a>, etc., can be used to explicitly set a scale of the x-axis. <a href="Axis.setLabels.htm">Axis.setLabels</a> or <a href="Axis.setLabels2.htm">Axis.setLabels2</a> should not be used for charts that use real x coordinates.<br><br>
In this example, the red line has unevenly spaced x coordinates, set using <a href="Layer.setXData.htm">Layer.setXData</a>. Both the green line and the orange line has evenly spaced x coordinates, but the spacing in the x dimension differs between the lines. Their x coordinates are set using <a href="Layer.setXData2.htm">Layer.setXData2</a>. Note that the lines start and end at different x coordinates, and they do not need to span the entire x-axis range. The x-axis in this example is automatically scaled.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\unevenpoints.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

# Data points which more unevenly spaced in time
my $data0Y = [62, 69, 53, 58, 84, 76, 49, 61, 64, 77, 79];
my $data0X = [perlchartdir::chartTime(2007, 1, 1), perlchartdir::chartTime(2007, 1, 2
    ), perlchartdir::chartTime(2007, 1, 5), perlchartdir::chartTime(2007, 1, 7),
    perlchartdir::chartTime(2007, 1, 10), perlchartdir::chartTime(2007, 1, 14),
    perlchartdir::chartTime(2007, 1, 17), perlchartdir::chartTime(2007, 1, 18),
    perlchartdir::chartTime(2007, 1, 19), perlchartdir::chartTime(2007, 1, 20),
    perlchartdir::chartTime(2007, 1, 21)];

# Data points which are evenly spaced in a certain time range
my $data1Y = [36, 25, 28, 38, 20, 30, 27, 35, 65, 60, 40, 73, 62, 90, 75, 72];
my $data1Start = perlchartdir::chartTime(2007, 1, 1);
my $data1End = perlchartdir::chartTime(2007, 1, 16);

# Data points which are evenly spaced in another time range, in which the spacing is
# different from the above series
my $data2Y = [25, 15, 30, 23, 32, 55, 45];
my $data2Start = perlchartdir::chartTime(2007, 1, 9);
my $data2End = perlchartdir::chartTime(2007, 1, 21);

# Create a XYChart object of size 600 x 400 pixels. Use a vertical gradient color
# from light blue (99ccff) to white (ffffff) spanning the top 100 pixels as
# background. Set border to grey (888888). Use rounded corners. Enable soft drop
# shadow.
my $c = new XYChart(600, 400);
$c-&gt;setBackground($c-&gt;linearGradientColor(0, 0, 0, 100, 0x99ccff, 0xffffff), 0x888888
    );
$c-&gt;setRoundedFrame();
$c-&gt;setDropShadow();

# Add a title using 18 pts Times New Roman Bold Italic font. #Set top margin to 16
# pixels.
$c-&gt;addTitle("Product Line Order Backlog", "timesbi.ttf", 18)-&gt;setMargin2(0, 0, 16, 0
    );

# Set the plotarea at (60, 80) and of 510 x 275 pixels in size. Use transparent
# border and dark grey (444444) dotted grid lines
my $plotArea = $c-&gt;setPlotArea(60, 80, 510, 275, -1, -1, $perlchartdir::Transparent,
    $c-&gt;dashLineColor(0x444444, 0x000101), -1);

# Add a legend box where the top-center is anchored to the horizontal center of the
# plot area at y = 45. Use horizontal layout and 10 points Arial Bold font, and
# transparent background and border.
my $legendBox = $c-&gt;addLegend($plotArea-&gt;getLeftX() + $plotArea-&gt;getWidth() / 2, 45,
    0, "arialbd.ttf", 10);
$legendBox-&gt;setAlignment($perlchartdir::TopCenter);
$legendBox-&gt;setBackground($perlchartdir::Transparent, $perlchartdir::Transparent);

# Set x-axis tick density to 75 pixels and y-axis tick density to 30 pixels.
# ChartDirector auto-scaling will use this as the guidelines when putting ticks on
# the x-axis and y-axis.
$c-&gt;yAxis()-&gt;setTickDensity(30);
$c-&gt;xAxis()-&gt;setTickDensity(75);

# Set all axes to transparent
$c-&gt;xAxis()-&gt;setColors($perlchartdir::Transparent);
$c-&gt;yAxis()-&gt;setColors($perlchartdir::Transparent);

# Set the x-axis margins to 15 pixels, so that the horizontal grid lines can extend
# beyond the leftmost and rightmost vertical grid lines
$c-&gt;xAxis()-&gt;setMargin(15, 15);

# Set axis label style to 8pts Arial Bold
$c-&gt;xAxis()-&gt;setLabelStyle("arialbd.ttf", 8);
$c-&gt;yAxis()-&gt;setLabelStyle("arialbd.ttf", 8);
$c-&gt;yAxis2()-&gt;setLabelStyle("arialbd.ttf", 8);

# Add axis title using 10pts Arial Bold Italic font
$c-&gt;yAxis()-&gt;setTitle("Backlog in USD millions", "arialbi.ttf", 10);

# Add the first data series
my $layer0 = $c-&gt;addLineLayer2();
$layer0-&gt;addDataSet($data0Y, 0xff0000, "Quantum Computer")-&gt;setDataSymbol(
    $perlchartdir::GlassSphere2Shape, 11);
$layer0-&gt;setXData($data0X);
$layer0-&gt;setLineWidth(3);

# Add the second data series
my $layer1 = $c-&gt;addLineLayer2();
$layer1-&gt;addDataSet($data1Y, 0x00ff00, "Atom Synthesizer")-&gt;setDataSymbol(
    $perlchartdir::GlassSphere2Shape, 11);
$layer1-&gt;setXData2($data1Start, $data1End);
$layer1-&gt;setLineWidth(3);

# Add the third data series
my $layer2 = $c-&gt;addLineLayer2();
$layer2-&gt;addDataSet($data2Y, 0xff6600, "Proton Cannon")-&gt;setDataSymbol(
    $perlchartdir::GlassSphere2Shape, 11);
$layer2-&gt;setXData2($data2Start, $data2End);
$layer2-&gt;setLineWidth(3);

# Output the chart
$c-&gt;makeChart("unevenpoints.png")</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\unevenpoints.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# Data points which more unevenly spaced in time
my $data0Y = [62, 69, 53, 58, 84, 76, 49, 61, 64, 77, 79];
my $data0X = [perlchartdir::chartTime(2007, 1, 1), perlchartdir::chartTime(2007, 1, 2
    ), perlchartdir::chartTime(2007, 1, 5), perlchartdir::chartTime(2007, 1, 7),
    perlchartdir::chartTime(2007, 1, 10), perlchartdir::chartTime(2007, 1, 14),
    perlchartdir::chartTime(2007, 1, 17), perlchartdir::chartTime(2007, 1, 18),
    perlchartdir::chartTime(2007, 1, 19), perlchartdir::chartTime(2007, 1, 20),
    perlchartdir::chartTime(2007, 1, 21)];

# Data points which are evenly spaced in a certain time range
my $data1Y = [36, 25, 28, 38, 20, 30, 27, 35, 65, 60, 40, 73, 62, 90, 75, 72];
my $data1Start = perlchartdir::chartTime(2007, 1, 1);
my $data1End = perlchartdir::chartTime(2007, 1, 16);

# Data points which are evenly spaced in another time range, in which the spacing is
# different from the above series
my $data2Y = [25, 15, 30, 23, 32, 55, 45];
my $data2Start = perlchartdir::chartTime(2007, 1, 9);
my $data2End = perlchartdir::chartTime(2007, 1, 21);

# Create a XYChart object of size 600 x 400 pixels. Use a vertical gradient color
# from light blue (99ccff) to white (ffffff) spanning the top 100 pixels as
# background. Set border to grey (888888). Use rounded corners. Enable soft drop
# shadow.
my $c = new XYChart(600, 400);
$c-&gt;setBackground($c-&gt;linearGradientColor(0, 0, 0, 100, 0x99ccff, 0xffffff), 0x888888
    );
$c-&gt;setRoundedFrame();
$c-&gt;setDropShadow();

# Add a title using 18 pts Times New Roman Bold Italic font. #Set top margin to 16
# pixels.
$c-&gt;addTitle("Product Line Order Backlog", "timesbi.ttf", 18)-&gt;setMargin2(0, 0, 16, 0
    );

# Set the plotarea at (60, 80) and of 510 x 275 pixels in size. Use transparent
# border and dark grey (444444) dotted grid lines
my $plotArea = $c-&gt;setPlotArea(60, 80, 510, 275, -1, -1, $perlchartdir::Transparent,
    $c-&gt;dashLineColor(0x444444, 0x000101), -1);

# Add a legend box where the top-center is anchored to the horizontal center of the
# plot area at y = 45. Use horizontal layout and 10 points Arial Bold font, and
# transparent background and border.
my $legendBox = $c-&gt;addLegend($plotArea-&gt;getLeftX() + $plotArea-&gt;getWidth() / 2, 45,
    0, "arialbd.ttf", 10);
$legendBox-&gt;setAlignment($perlchartdir::TopCenter);
$legendBox-&gt;setBackground($perlchartdir::Transparent, $perlchartdir::Transparent);

# Set x-axis tick density to 75 pixels and y-axis tick density to 30 pixels.
# ChartDirector auto-scaling will use this as the guidelines when putting ticks on
# the x-axis and y-axis.
$c-&gt;yAxis()-&gt;setTickDensity(30);
$c-&gt;xAxis()-&gt;setTickDensity(75);

# Set all axes to transparent
$c-&gt;xAxis()-&gt;setColors($perlchartdir::Transparent);
$c-&gt;yAxis()-&gt;setColors($perlchartdir::Transparent);

# Set the x-axis margins to 15 pixels, so that the horizontal grid lines can extend
# beyond the leftmost and rightmost vertical grid lines
$c-&gt;xAxis()-&gt;setMargin(15, 15);

# Set axis label style to 8pts Arial Bold
$c-&gt;xAxis()-&gt;setLabelStyle("arialbd.ttf", 8);
$c-&gt;yAxis()-&gt;setLabelStyle("arialbd.ttf", 8);
$c-&gt;yAxis2()-&gt;setLabelStyle("arialbd.ttf", 8);

# Add axis title using 10pts Arial Bold Italic font
$c-&gt;yAxis()-&gt;setTitle("Backlog in USD millions", "arialbi.ttf", 10);

# Add the first data series
my $layer0 = $c-&gt;addLineLayer2();
$layer0-&gt;addDataSet($data0Y, 0xff0000, "Quantum Computer")-&gt;setDataSymbol(
    $perlchartdir::GlassSphere2Shape, 11);
$layer0-&gt;setXData($data0X);
$layer0-&gt;setLineWidth(3);

# Add the second data series
my $layer1 = $c-&gt;addLineLayer2();
$layer1-&gt;addDataSet($data1Y, 0x00ff00, "Atom Synthesizer")-&gt;setDataSymbol(
    $perlchartdir::GlassSphere2Shape, 11);
$layer1-&gt;setXData2($data1Start, $data1End);
$layer1-&gt;setLineWidth(3);

# Add the third data series
my $layer2 = $c-&gt;addLineLayer2();
$layer2-&gt;addDataSet($data2Y, 0xff6600, "Proton Cannon")-&gt;setDataSymbol(
    $perlchartdir::GlassSphere2Shape, 11);
$layer2-&gt;setXData2($data2Start, $data2End);
$layer2-&gt;setLineWidth(3);

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $c-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
