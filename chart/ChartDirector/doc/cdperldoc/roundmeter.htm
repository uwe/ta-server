<HTML>
<HEAD>
<Title>Round Meter</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Round Meter</p>
<hr class="separator">
<div class="content">
<img src="images/roundmeter.png">
<br><br>
This example demonstrates a round meter.<br><br>
This example is similar to the <a href="semicirclemeter.htm">Semi-Circle Meter</a> example, but with the angular range set to much wider. There are also more chart formatting and decorations.<br><br>
First, a basic angular meter is created using the following steps:<br><br>
<ul><li> Create an <a href="AngularMeter.htm">AngularMeter</a> object using <a href="AngularMeter.AngularMeter.htm">AngularMeter.AngularMeter</a>. In this example, the background color is set to silver using <a href="perlchartdir.silverColor.htm">perlchartdir::silverColor</a> and the meter border is set to have a depressed effect.<br><br>
<li> Specify the orientation of the meter using <a href="AngularMeter.setMeter.htm">AngularMeter.setMeter</a>. This specifies the center, the radius, and the angular span of the meter.<br><br>
<li> Set the numeric scale of the meter using <a href="BaseMeter.setScale.htm">BaseMeter.setScale</a><br><br>
<li> Add a pointer to the meter using <a href="BaseMeter.addPointer.htm">BaseMeter.addPointer</a></ul>
Then more formatting and decorations are added. In this example, the following features are used:<br><br>
<ul><li> Define zones on the meter using <a href="AngularMeter.addZone.htm">AngularMeter.addZone</a>. In this example, 3 zones (red, yellow and green) are defined.<br><br>
<li> Add arbitrary text boxes to the meter using <a href="BaseChart.addText.htm">BaseChart.addText</a>. In this example, a text box is added to label the meter as "CPU", and another text box is added to display the data value as text.<br><br>
<li> Set the scale and tick and line widths with <a href="BaseMeter.setLineWidth.htm">BaseMeter.setLineWidth</a>. The meter scale line is disabled by setting its line width to 0 (note there is no arc along the scale). The major tick width is set to 2 pixels, so the major ticks are thicker than the minor ticks.<br><br>
<li> Add a light blue ring to encircle the meter using <a href="AngularMeter.addRing.htm">AngularMeter.addRing</a>.<br><br>
<li> Add a metallic blue circle as the meter face using <a href="AngularMeter.addRing.htm">AngularMeter.addRing</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\roundmeter.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

# The value to display on the meter
my $value = 45.17;

# Create an AugularMeter object of size 200 x 200 pixels, with silver background,
# black border, 2 pixel 3D depressed border and rounded corners.
my $m = new AngularMeter(200, 200, perlchartdir::silverColor(), 0x000000, -2);
$m-&gt;setRoundedFrame();

# Set the meter center at (100, 100), with radius 85 pixels, and span from -135 to
# +135 degress
$m-&gt;setMeter(100, 100, 85, -135, 135);

# Meter scale is 0 - 100, with major tick every 10 units, minor tick every 5 units,
# and micro tick every 1 units
$m-&gt;setScale(0, 100, 10, 5, 1);

# Disable default angular arc by setting its width to 0. Set 2 pixels line width for
# major tick, and 1 pixel line width for minor ticks.
$m-&gt;setLineWidth(0, 2, 1);

# Set the circular meter surface as metallic blue (9999DD)
$m-&gt;addRing(0, 90, perlchartdir::metalColor(0x9999dd));

# Add a blue (6666FF) ring between radii 88 - 90 as decoration
$m-&gt;addRing(88, 90, 0x6666ff);

# Set 0 - 60 as green (99FF99) zone, 60 - 80 as yellow (FFFF00) zone, and 80 - 100 as
# red (FF3333) zone
$m-&gt;addZone(0, 60, 0x99ff99);
$m-&gt;addZone(60, 80, 0xffff00);
$m-&gt;addZone(80, 100, 0xff3333);

# Add a text label centered at (100, 135) with 15 pts Arial Bold font
$m-&gt;addText(100, 135, "CPU", "arialbd.ttf", 15, $perlchartdir::TextColor,
    $perlchartdir::Center);

# Add a text box centered at (100, 165) showing the value formatted to 2 decimal
# places, using white text on a black background, and with 1 pixel 3D depressed
# border
$m-&gt;addText(100, 165, $m-&gt;formatValue($value, "2"), "Arial", 8, 0xffffff,
    $perlchartdir::Center)-&gt;setBackground(0x000000, 0x000000, -1);

# Add a semi-transparent blue (40333399) pointer at the specified value
$m-&gt;addPointer($value, 0x40333399);

# Output the chart
$m-&gt;makeChart("roundmeter.png")</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\roundmeter.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# The value to display on the meter
my $value = 45.17;

# Create an AugularMeter object of size 200 x 200 pixels, with silver background,
# black border, 2 pixel 3D depressed border and rounded corners.
my $m = new AngularMeter(200, 200, perlchartdir::silverColor(), 0x000000, -2);
$m-&gt;setRoundedFrame();

# Set the meter center at (100, 100), with radius 85 pixels, and span from -135 to
# +135 degress
$m-&gt;setMeter(100, 100, 85, -135, 135);

# Meter scale is 0 - 100, with major tick every 10 units, minor tick every 5 units,
# and micro tick every 1 units
$m-&gt;setScale(0, 100, 10, 5, 1);

# Disable default angular arc by setting its width to 0. Set 2 pixels line width for
# major tick, and 1 pixel line width for minor ticks.
$m-&gt;setLineWidth(0, 2, 1);

# Set the circular meter surface as metallic blue (9999DD)
$m-&gt;addRing(0, 90, perlchartdir::metalColor(0x9999dd));

# Add a blue (6666FF) ring between radii 88 - 90 as decoration
$m-&gt;addRing(88, 90, 0x6666ff);

# Set 0 - 60 as green (99FF99) zone, 60 - 80 as yellow (FFFF00) zone, and 80 - 100 as
# red (FF3333) zone
$m-&gt;addZone(0, 60, 0x99ff99);
$m-&gt;addZone(60, 80, 0xffff00);
$m-&gt;addZone(80, 100, 0xff3333);

# Add a text label centered at (100, 135) with 15 pts Arial Bold font
$m-&gt;addText(100, 135, "CPU", "arialbd.ttf", 15, $perlchartdir::TextColor,
    $perlchartdir::Center);

# Add a text box centered at (100, 165) showing the value formatted to 2 decimal
# places, using white text on a black background, and with 1 pixel 3D depressed
# border
$m-&gt;addText(100, 165, $m-&gt;formatValue($value, "2"), "Arial", 8, 0xffffff,
    $perlchartdir::Center)-&gt;setBackground(0x000000, 0x000000, -1);

# Add a semi-transparent blue (40333399) pointer at the specified value
$m-&gt;addPointer($value, 0x40333399);

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $m-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
