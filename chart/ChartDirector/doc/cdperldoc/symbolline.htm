<HTML>
<HEAD>
<Title>Symbol Line Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Symbol Line Chart</p>
<hr class="separator">
<div class="content">
<img src="images/symbolline.png">
<br><br>
This example demonstrates using symbols to represent data points, and putting data labels on top of the symbols.<br><br>
Note that in this example, the chart title background is not a solid color but a 1 x 2 pixels pattern.<br><br>
<ul><li> Set background color and 3D border for the chart using <a href="XYChart.XYChart.htm">XYChart.XYChart</a>.<br><br>
<li> Enable both vertical and horizontal grid lines using <a href="XYChart.setPlotArea.htm">XYChart.setPlotArea</a>.<br><br>
<li> Create a pattern color with a 1 x 2 pixel in-memory pattern using <a href="BaseChart.patternColor.htm">BaseChart.patternColor</a>. Set it as the background color of the title box using <a href="Box.setBackground.htm">Box.setBackground</a>.<br><br>
<li> Enable symbols for the data points using <a href="DataSet.setDataSymbol.htm">DataSet.setDataSymbol</a>.<br><br>
<li> Add labels on top of the symbols using <a href="Layer.setDataLabelFormat.htm">Layer.setDataLabelFormat</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\symbolline.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

# The data for the line chart
my $data0 = [60.2, 51.7, 81.3, 48.6, 56.2, 68.9, 52.8];
my $data1 = [30.0, 32.7, 33.9, 29.5, 32.2, 28.4, 29.8];
my $labels = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

# Create a XYChart object of size 300 x 180 pixels, with a pale yellow (0xffffc0)
# background, a black border, and 1 pixel 3D border effect.
my $c = new XYChart(300, 180, 0xffffc0, 0x000000, 1);

# Set the plotarea at (45, 35) and of size 240 x 120 pixels, with white background.
# Turn on both horizontal and vertical grid lines with light grey color (0xc0c0c0)
$c-&gt;setPlotArea(45, 35, 240, 120, 0xffffff, -1, -1, 0xc0c0c0, -1);

# Add a legend box at (45, 12) (top of the chart) using horizontal layout and 8 pts
# Arial font Set the background and border color to Transparent.
$c-&gt;addLegend(45, 12, 0, "", 8)-&gt;setBackground($perlchartdir::Transparent);

# Add a title to the chart using 9 pts Arial Bold/white font. Use a 1 x 2 bitmap
# pattern as the background.
$c-&gt;addTitle("Server Load (Jun 01 - Jun 07)", "arialbd.ttf", 9, 0xffffff
    )-&gt;setBackground($c-&gt;patternColor([0x004000, 0x008000], 2));

# Set the y axis label format to nn%
$c-&gt;yAxis()-&gt;setLabelFormat("{value}%");

# Set the labels on the x axis
$c-&gt;xAxis()-&gt;setLabels($labels);

# Add a line layer to the chart
my $layer = $c-&gt;addLineLayer();

# Add the first line. Plot the points with a 7 pixel square symbol
$layer-&gt;addDataSet($data0, 0xcf4040, "Peak")-&gt;setDataSymbol(
    $perlchartdir::SquareSymbol, 7);

# Add the second line. Plot the points with a 9 pixel dismond symbol
$layer-&gt;addDataSet($data1, 0x40cf40, "Average")-&gt;setDataSymbol(
    $perlchartdir::DiamondSymbol, 9);

# Enable data label on the data points. Set the label format to nn%.
$layer-&gt;setDataLabelFormat("{value|0}%");

# Output the chart
$c-&gt;makeChart("symbolline.png")</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\symbolline.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# The data for the line chart
my $data0 = [60.2, 51.7, 81.3, 48.6, 56.2, 68.9, 52.8];
my $data1 = [30.0, 32.7, 33.9, 29.5, 32.2, 28.4, 29.8];
my $labels = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

# Create a XYChart object of size 300 x 180 pixels, with a pale yellow (0xffffc0)
# background, a black border, and 1 pixel 3D border effect.
my $c = new XYChart(300, 180, 0xffffc0, 0x000000, 1);

# Set the plotarea at (45, 35) and of size 240 x 120 pixels, with white background.
# Turn on both horizontal and vertical grid lines with light grey color (0xc0c0c0)
$c-&gt;setPlotArea(45, 35, 240, 120, 0xffffff, -1, -1, 0xc0c0c0, -1);

# Add a legend box at (45, 12) (top of the chart) using horizontal layout and 8 pts
# Arial font Set the background and border color to Transparent.
$c-&gt;addLegend(45, 12, 0, "", 8)-&gt;setBackground($perlchartdir::Transparent);

# Add a title to the chart using 9 pts Arial Bold/white font. Use a 1 x 2 bitmap
# pattern as the background.
$c-&gt;addTitle("Server Load (Jun 01 - Jun 07)", "arialbd.ttf", 9, 0xffffff
    )-&gt;setBackground($c-&gt;patternColor([0x004000, 0x008000], 2));

# Set the y axis label format to nn%
$c-&gt;yAxis()-&gt;setLabelFormat("{value}%");

# Set the labels on the x axis
$c-&gt;xAxis()-&gt;setLabels($labels);

# Add a line layer to the chart
my $layer = $c-&gt;addLineLayer();

# Add the first line. Plot the points with a 7 pixel square symbol
$layer-&gt;addDataSet($data0, 0xcf4040, "Peak")-&gt;setDataSymbol(
    $perlchartdir::SquareSymbol, 7);

# Add the second line. Plot the points with a 9 pixel dismond symbol
$layer-&gt;addDataSet($data1, 0x40cf40, "Average")-&gt;setDataSymbol(
    $perlchartdir::DiamondSymbol, 9);

# Enable data label on the data points. Set the label format to nn%.
$layer-&gt;setDataLabelFormat("{value|0}%");

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $c-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
