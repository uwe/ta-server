<HTML>
<HEAD>
<Title>Linear Zone Meter</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Linear Zone Meter</p>
<hr class="separator">
<div class="content">
<img src="images/linearzonemeter.png">
<br><br>
This example demonstrates a linear meter which is labelled with zones.<br><br>
The above meter is achieved by using <a href="LinearMeter.addZone.htm">LinearMeter.addZone</a> to add labelled zone. The black lines separating the zones are added by using <a href="BaseMeter.addLabel.htm">BaseMeter.addLabel</a> with empty spaces as labels.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\linearzonemeter.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

# The value to display on the meter
my $value = 85;

# Create an LinearMeter object of size 210 x 45 pixels, using silver background with
# a 2 pixel black 3D depressed border.
my $m = new LinearMeter(210, 45, perlchartdir::silverColor(), 0, -2);

# Set the scale region top-left corner at (5, 5), with size of 200 x 20 pixels. The
# scale labels are located on the bottom (implies horizontal meter)
$m-&gt;setMeter(5, 5, 200, 20, $perlchartdir::Bottom);

# Set meter scale from 0 - 100
$m-&gt;setScale(0, 100);

# Add a title at the bottom of the meter with a 1 pixel raised 3D border
$m-&gt;addTitle2($perlchartdir::Bottom, "Battery Level", "arialbd.ttf", 8
    )-&gt;setBackground($perlchartdir::Transparent, -1, 1);

# Set 3 zones of different colors to represent Good/Weak/Bad data ranges
$m-&gt;addZone(50, 100, 0x99ff99, "Good");
$m-&gt;addZone(20, 50, 0xffff66, "Weak");
$m-&gt;addZone(0, 20, 0xffcccc, "Bad");

# Add empty labels (just need the ticks) at 0/20/50/80 as separators for zones
$m-&gt;addLabel(0, " ");
$m-&gt;addLabel(20, " ");
$m-&gt;addLabel(50, " ");
$m-&gt;addLabel(100, " ");

# Add a semi-transparent blue (800000ff) pointer at the specified value, using
# triangular pointer shape
$m-&gt;addPointer($value, 0x800000ff)-&gt;setShape($perlchartdir::TriangularPointer);

# Output the chart
$m-&gt;makeChart("linearzonemeter.png")</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\linearzonemeter.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# The value to display on the meter
my $value = 85;

# Create an LinearMeter object of size 210 x 45 pixels, using silver background with
# a 2 pixel black 3D depressed border.
my $m = new LinearMeter(210, 45, perlchartdir::silverColor(), 0, -2);

# Set the scale region top-left corner at (5, 5), with size of 200 x 20 pixels. The
# scale labels are located on the bottom (implies horizontal meter)
$m-&gt;setMeter(5, 5, 200, 20, $perlchartdir::Bottom);

# Set meter scale from 0 - 100
$m-&gt;setScale(0, 100);

# Add a title at the bottom of the meter with a 1 pixel raised 3D border
$m-&gt;addTitle2($perlchartdir::Bottom, "Battery Level", "arialbd.ttf", 8
    )-&gt;setBackground($perlchartdir::Transparent, -1, 1);

# Set 3 zones of different colors to represent Good/Weak/Bad data ranges
$m-&gt;addZone(50, 100, 0x99ff99, "Good");
$m-&gt;addZone(20, 50, 0xffff66, "Weak");
$m-&gt;addZone(0, 20, 0xffcccc, "Bad");

# Add empty labels (just need the ticks) at 0/20/50/80 as separators for zones
$m-&gt;addLabel(0, " ");
$m-&gt;addLabel(20, " ");
$m-&gt;addLabel(50, " ");
$m-&gt;addLabel(100, " ");

# Add a semi-transparent blue (800000ff) pointer at the specified value, using
# triangular pointer shape
$m-&gt;addPointer($value, 0x800000ff)-&gt;setShape($perlchartdir::TriangularPointer);

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $m-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
