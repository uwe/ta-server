<HTML>
<HEAD>
<Title>Square Angular Meters</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Square Angular Meters</p>
<hr class="separator">
<div class="content">
<img src="images/squareameter0.png">&nbsp;&nbsp;<img src="images/squareameter1.png">&nbsp;&nbsp;<img src="images/squareameter2.png">&nbsp;&nbsp;<img src="images/squareameter3.png">
<br><br>
This example demonstrates angular meters of which the pointers are pivoted at the corners of squares.<br><br>
The meters in this example are achieved by using various start angles and end angles with 90 degrees angular span between them.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\squareameter.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

sub createChart
{
    my $img = shift;

    # The value to display on the meter
    my $value = 4.75;

    # Create an AugularMeter object of size 110 x 110 pixels, using silver background
    # color with a black 2 pixel 3D depressed border.
    my $m = new AngularMeter(110, 110, perlchartdir::silverColor(), 0x000000, -2);

    # Set meter appearance according to a parameter
    if ($img eq "0") {
        # Set the meter center at bottom left corner (15, 95), with radius 85 pixels.
        # Meter spans from 90 - 0 degrees.
        $m-&gt;setMeter(15, 95, 85, 90, 0);
        # Add a label to the meter centered at (35, 75)
        $m-&gt;addText(35, 75, "VDC", "arialbd.ttf", 12, $perlchartdir::TextColor,
            $perlchartdir::Center);
        # Add a text box to show the value at top right corner (103, 7)
        $m-&gt;addText(103, 7, $m-&gt;formatValue($value, "2"), "arial.ttf", 8, 0xffffff,
            $perlchartdir::TopRight)-&gt;setBackground(0, 0, -1);
    } elsif ($img eq "1") {
        # Set the meter center at top left corner (15, 15), with radius 85 pixels.
        # Meter spans from 90 - 180 degrees.
        $m-&gt;setMeter(15, 15, 85, 90, 180);
        # Add a label to the meter centered at (35, 35)
        $m-&gt;addText(35, 35, "AMP", "arialbd.ttf", 12, $perlchartdir::TextColor,
            $perlchartdir::Center);
        # Add a text box to show the value at bottom right corner (103, 103)
        $m-&gt;addText(103, 103, $m-&gt;formatValue($value, "2"), "arial.ttf", 8, 0xffffff,
            $perlchartdir::BottomRight)-&gt;setBackground(0, 0, -1);
    } elsif ($img eq "2") {
        # Set the meter center at top right corner (15, 95), with radius 85 pixels.
        # Meter spans from 270 - 180 degrees.
        $m-&gt;setMeter(95, 15, 85, 270, 180);
        # Add a label to the meter centered at (75, 35)
        $m-&gt;addText(75, 35, "KW", "arialbd.ttf", 12, $perlchartdir::TextColor,
            $perlchartdir::Center);
        # Add a text box to show the value at bottom left corner (7, 103)
        $m-&gt;addText(7, 103, $m-&gt;formatValue($value, "2"), "arial.ttf", 8, 0xffffff,
            $perlchartdir::BottomLeft)-&gt;setBackground(0, 0, -1);
    } else {
        # Set the meter center at bottom right corner (95, 95), with radius 85
        # pixels. Meter spans from 270 - 360 degrees.
        $m-&gt;setMeter(95, 95, 85, 270, 360);
        # Add a label to the meter centered at (75, 75)
        $m-&gt;addText(75, 75, "RPM", "arialbd.ttf", 12, $perlchartdir::TextColor,
            $perlchartdir::Center);
        # Add a text box to show the value at top left corner (7, 7)
        $m-&gt;addText(7, 7, $m-&gt;formatValue($value, "2"), "arial.ttf", 8, 0xffffff,
            $perlchartdir::TopLeft)-&gt;setBackground(0, 0, -1);
    }

    # Meter scale is 0 - 10, with a major tick every 2 units, and minor tick every 1
    # unit
    $m-&gt;setScale(0, 10, 2, 1);

    # Set 0 - 6 as green (99ff99) zone, 6 - 8 as yellow (ffff00) zone, and 8 - 10 as
    # red (ff3333) zone
    $m-&gt;addZone(0, 6, 0x99ff99, 0x808080);
    $m-&gt;addZone(6, 8, 0xffff00, 0x808080);
    $m-&gt;addZone(8, 10, 0xff3333, 0x808080);

    # Add a semi-transparent black (80000000) pointer at the specified value
    $m-&gt;addPointer($value, 0x80000000);

    # Output the chart
    $m-&gt;makeChart("squareameter$img.png")
}

createChart(0);
createChart(1);
createChart(2);
createChart(3);</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\squareameter.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# Get HTTP query parameters
use CGI;
my $query = new CGI;

# The value to display on the meter
my $value = 4.75;

# Create an AugularMeter object of size 110 x 110 pixels, using silver background
# color with a black 2 pixel 3D depressed border.
my $m = new AngularMeter(110, 110, perlchartdir::silverColor(), 0x000000, -2);

# Set meter appearance according to a parameter
if ($query-&gt;param("img") eq "0") {
    # Set the meter center at bottom left corner (15, 95), with radius 85 pixels.
    # Meter spans from 90 - 0 degrees.
    $m-&gt;setMeter(15, 95, 85, 90, 0);
    # Add a label to the meter centered at (35, 75)
    $m-&gt;addText(35, 75, "VDC", "arialbd.ttf", 12, $perlchartdir::TextColor,
        $perlchartdir::Center);
    # Add a text box to show the value at top right corner (103, 7)
    $m-&gt;addText(103, 7, $m-&gt;formatValue($value, "2"), "arial.ttf", 8, 0xffffff,
        $perlchartdir::TopRight)-&gt;setBackground(0, 0, -1);
} elsif ($query-&gt;param("img") eq "1") {
    # Set the meter center at top left corner (15, 15), with radius 85 pixels. Meter
    # spans from 90 - 180 degrees.
    $m-&gt;setMeter(15, 15, 85, 90, 180);
    # Add a label to the meter centered at (35, 35)
    $m-&gt;addText(35, 35, "AMP", "arialbd.ttf", 12, $perlchartdir::TextColor,
        $perlchartdir::Center);
    # Add a text box to show the value at bottom right corner (103, 103)
    $m-&gt;addText(103, 103, $m-&gt;formatValue($value, "2"), "arial.ttf", 8, 0xffffff,
        $perlchartdir::BottomRight)-&gt;setBackground(0, 0, -1);
} elsif ($query-&gt;param("img") eq "2") {
    # Set the meter center at top right corner (15, 95), with radius 85 pixels. Meter
    # spans from 270 - 180 degrees.
    $m-&gt;setMeter(95, 15, 85, 270, 180);
    # Add a label to the meter centered at (75, 35)
    $m-&gt;addText(75, 35, "KW", "arialbd.ttf", 12, $perlchartdir::TextColor,
        $perlchartdir::Center);
    # Add a text box to show the value at bottom left corner (7, 103)
    $m-&gt;addText(7, 103, $m-&gt;formatValue($value, "2"), "arial.ttf", 8, 0xffffff,
        $perlchartdir::BottomLeft)-&gt;setBackground(0, 0, -1);
} else {
    # Set the meter center at bottom right corner (95, 95), with radius 85 pixels.
    # Meter spans from 270 - 360 degrees.
    $m-&gt;setMeter(95, 95, 85, 270, 360);
    # Add a label to the meter centered at (75, 75)
    $m-&gt;addText(75, 75, "RPM", "arialbd.ttf", 12, $perlchartdir::TextColor,
        $perlchartdir::Center);
    # Add a text box to show the value at top left corner (7, 7)
    $m-&gt;addText(7, 7, $m-&gt;formatValue($value, "2"), "arial.ttf", 8, 0xffffff,
        $perlchartdir::TopLeft)-&gt;setBackground(0, 0, -1);
}

# Meter scale is 0 - 10, with a major tick every 2 units, and minor tick every 1 unit
$m-&gt;setScale(0, 10, 2, 1);

# Set 0 - 6 as green (99ff99) zone, 6 - 8 as yellow (ffff00) zone, and 8 - 10 as red
# (ff3333) zone
$m-&gt;addZone(0, 6, 0x99ff99, 0x808080);
$m-&gt;addZone(6, 8, 0xffff00, 0x808080);
$m-&gt;addZone(8, 10, 0xff3333, 0x808080);

# Add a semi-transparent black (80000000) pointer at the specified value
$m-&gt;addPointer($value, 0x80000000);

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $m-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
