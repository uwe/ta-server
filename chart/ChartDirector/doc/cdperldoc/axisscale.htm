<HTML>
<HEAD>
<Title>Y-Axis Scaling</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Perl Edition)</p>
<p class="heading1">Y-Axis Scaling</p>
<hr class="separator">
<div class="content">
<img src="images/axisscale0.png">&nbsp;&nbsp;<img src="images/axisscale1.png">&nbsp;&nbsp;<img src="images/axisscale2.png">&nbsp;&nbsp;<img src="images/axisscale3.png">&nbsp;&nbsp;<img src="images/axisscale4.png">
<br><br>
This example demonstrates how to control auto-scaling.<br><br>
By default, ChartDirector auto-scales all axes. The <a href="Axis.setAutoScale.htm">Axis.setAutoScale</a> method controls the top extension, bottom extension and the zero affinity parameters that ChartDirector uses during auto-scaling. The first two parameters determine the amount of top and bottom margins to reserve during auto-scaling, while the last parameter determines when the axis should start from the origin (0).<br><br>
The first 3 charts demonstrate the effects of different top/bottom extensions.<br><br>
The 4th chart demonstrates that one could exclude a segment on the ends of an axis from scaling using <a href="Axis.setMargin.htm">Axis.setMargin</a>.<br><br>
The 5th chart demonstrates manual scaling instead of auto-scaling. In manual scaling, the axis scale is explicitly provided by using <a href="Axis.setLinearScale.htm">Axis.setLinearScale</a>, <a href="Axis.setLinearScale2.htm">Axis.setLinearScale2</a>, <a href="Axis.setLogScale.htm">Axis.setLogScale</a>, <a href="Axis.setLogScale2.htm">Axis.setLogScale2</a>, <a href="Axis.setDateScale.htm">Axis.setDateScale</a> or <a href="Axis.setDateScale2.htm">Axis.setDateScale2</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\axisscale.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

sub createChart
{
    my $img = shift;

    # The data for the chart
    my $data = [5.5, 3.5, -3.7, 1.7, -1.4, 3.3];
    my $labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun"];

    # Create a XYChart object of size 200 x 190 pixels
    my $c = new XYChart(200, 190);

    # Set the plot area at (30, 20) and of size 140 x 140 pixels
    $c-&gt;setPlotArea(30, 20, 140, 140);

    # Configure the axis as according to the input parameter
    if ($img eq "0") {
        $c-&gt;addTitle("No Axis Extension", "arial.ttf", 8);
    } elsif ($img eq "1") {
        $c-&gt;addTitle("Top/Bottom Extensions = 0/0", "arial.ttf", 8);
        # Reserve 20% margin at top of plot area when auto-scaling
        $c-&gt;yAxis()-&gt;setAutoScale(0, 0);
    } elsif ($img eq "2") {
        $c-&gt;addTitle("Top/Bottom Extensions = 0.2/0.2", "arial.ttf", 8);
        # Reserve 20% margin at top and bottom of plot area when auto-scaling
        $c-&gt;yAxis()-&gt;setAutoScale(0.2, 0.2);
    } elsif ($img eq "3") {
        $c-&gt;addTitle("Axis Top Margin = 15", "arial.ttf", 8);
        # Reserve 15 pixels at top of plot area
        $c-&gt;yAxis()-&gt;setMargin(15);
    } else {
        $c-&gt;addTitle("Manual Scale -5 to 10", "arial.ttf", 8);
        # Set the y axis to scale from -5 to 10, with ticks every 5 units
        $c-&gt;yAxis()-&gt;setLinearScale(-5, 10, 5);
    }

    # Set the labels on the x axis
    $c-&gt;xAxis()-&gt;setLabels($labels);

    # Add a color bar layer using the given data. Use a 1 pixel 3D border for the
    # bars.
    $c-&gt;addBarLayer3($data)-&gt;setBorderColor(-1, 1);

    # Output the chart
    $c-&gt;makeChart("axisscale$img.png")
}

createChart(0);
createChart(1);
createChart(2);
createChart(3);
createChart(4);</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\axisscale.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0) =~ /(.*)/;

use perlchartdir;

# Get HTTP query parameters
use CGI;
my $query = new CGI;

# The data for the chart
my $data = [5.5, 3.5, -3.7, 1.7, -1.4, 3.3];
my $labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun"];

# Create a XYChart object of size 200 x 190 pixels
my $c = new XYChart(200, 190);

# Set the plot area at (30, 20) and of size 140 x 140 pixels
$c-&gt;setPlotArea(30, 20, 140, 140);

# Configure the axis as according to the input parameter
if ($query-&gt;param("img") eq "0") {
    $c-&gt;addTitle("No Axis Extension", "arial.ttf", 8);
} elsif ($query-&gt;param("img") eq "1") {
    $c-&gt;addTitle("Top/Bottom Extensions = 0/0", "arial.ttf", 8);
    # Reserve 20% margin at top of plot area when auto-scaling
    $c-&gt;yAxis()-&gt;setAutoScale(0, 0);
} elsif ($query-&gt;param("img") eq "2") {
    $c-&gt;addTitle("Top/Bottom Extensions = 0.2/0.2", "arial.ttf", 8);
    # Reserve 20% margin at top and bottom of plot area when auto-scaling
    $c-&gt;yAxis()-&gt;setAutoScale(0.2, 0.2);
} elsif ($query-&gt;param("img") eq "3") {
    $c-&gt;addTitle("Axis Top Margin = 15", "arial.ttf", 8);
    # Reserve 15 pixels at top of plot area
    $c-&gt;yAxis()-&gt;setMargin(15);
} else {
    $c-&gt;addTitle("Manual Scale -5 to 10", "arial.ttf", 8);
    # Set the y axis to scale from -5 to 10, with ticks every 5 units
    $c-&gt;yAxis()-&gt;setLinearScale(-5, 10, 5);
}

# Set the labels on the x axis
$c-&gt;xAxis()-&gt;setLabels($labels);

# Add a color bar layer using the given data. Use a 1 pixel 3D border for the bars.
$c-&gt;addBarLayer3($data)-&gt;setBorderColor(-1, 1);

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $c-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2010 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
